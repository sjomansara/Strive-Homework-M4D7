{"ast":null,"code":"var _jsxFileName = \"/Users/colemanrose/m4-d6-hw/src/components/CommentArea.jsx\",\n    _s = $RefreshSig$();\n\nimport { useState, useEffect } from 'react';\nimport CommentList from './CommentList';\nimport AddComment from './AddComment';\nimport Loading from './Loading';\nimport Error from './Error';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst CommentArea = ({\n  asin\n}) => {\n  _s();\n\n  const [comments, setComments] = useState([]);\n  const [isLoading, setIsLoading] = useState(false);\n  const [isError, setIsError] = useState(false);\n\n  componentDidUpdate = async prevProps => {\n    if (prevProps.asin !== this.props.asin) {\n      this.setState({\n        isLoading: true\n      });\n\n      try {\n        let response = await fetch('https://striveschool-api.herokuapp.com/api/comments/' + this.props.asin, {\n          headers: {\n            Authorization: 'Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJfaWQiOiI2MTFkMGNkODJkNTI2MjAwMTViNmRkMTEiLCJpYXQiOjE2MzA0MTY2NTIsImV4cCI6MTYzMTYyNjI1Mn0.fisEkgJq6UEakcqWnRJsQMKZz7LaVF2pOlfCz9VAA5M'\n          }\n        });\n        console.log(response);\n\n        if (response.ok) {\n          let comments = await response.json();\n          this.setState({\n            comments: comments,\n            isLoading: false,\n            isError: false\n          });\n        } else {\n          console.log('error');\n          this.setState({\n            isLoading: false,\n            isError: true\n          });\n        }\n      } catch (error) {\n        console.log(error);\n        this.setState({\n          isLoading: false,\n          isError: true\n        });\n      }\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [this.state.isLoading && /*#__PURE__*/_jsxDEV(Loading, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 42\n    }, this), this.state.isError && /*#__PURE__*/_jsxDEV(Error, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 40\n    }, this), /*#__PURE__*/_jsxDEV(AddComment, {\n      asin: this.props.asin\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 17\n    }, this), /*#__PURE__*/_jsxDEV(CommentList, {\n      commentsToShow: this.state.comments\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 17\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 42,\n    columnNumber: 13\n  }, this);\n};\n\n_s(CommentArea, \"A0ear+qayz1LMFSnh9UhVnTmJEU=\");\n\n_c = CommentArea;\nexport default CommentArea;\n\nvar _c;\n\n$RefreshReg$(_c, \"CommentArea\");","map":{"version":3,"sources":["/Users/colemanrose/m4-d6-hw/src/components/CommentArea.jsx"],"names":["useState","useEffect","CommentList","AddComment","Loading","Error","CommentArea","asin","comments","setComments","isLoading","setIsLoading","isError","setIsError","componentDidUpdate","prevProps","props","setState","response","fetch","headers","Authorization","console","log","ok","json","error","state"],"mappings":";;;AAAA,SAASA,QAAT,EAAmBC,SAAnB,QAAoC,OAApC;AACA,OAAOC,WAAP,MAAwB,eAAxB;AACA,OAAOC,UAAP,MAAuB,cAAvB;AACA,OAAOC,OAAP,MAAoB,WAApB;AACA,OAAOC,KAAP,MAAkB,SAAlB;;;AAEA,MAAMC,WAAW,GAAG,CAAC;AAACC,EAAAA;AAAD,CAAD,KAAW;AAAA;;AAE3B,QAAM,CAACC,QAAD,EAAWC,WAAX,IAA0BT,QAAQ,CAAC,EAAD,CAAxC;AACA,QAAM,CAACU,SAAD,EAAYC,YAAZ,IAA4BX,QAAQ,CAAC,KAAD,CAA1C;AACA,QAAM,CAACY,OAAD,EAAUC,UAAV,IAAwBb,QAAQ,CAAC,KAAD,CAAtC;;AAGAc,EAAAA,kBAAkB,GAAG,MAAOC,SAAP,IAAqB;AACtC,QAAIA,SAAS,CAACR,IAAV,KAAmB,KAAKS,KAAL,CAAWT,IAAlC,EAAwC;AACpC,WAAKU,QAAL,CAAc;AACVP,QAAAA,SAAS,EAAE;AADD,OAAd;;AAGA,UAAI;AACA,YAAIQ,QAAQ,GAAG,MAAMC,KAAK,CAAC,yDAAyD,KAAKH,KAAL,CAAWT,IAArE,EAA2E;AACjGa,UAAAA,OAAO,EAAE;AACLC,YAAAA,aAAa,EAAE;AADV;AADwF,SAA3E,CAA1B;AAKAC,QAAAA,OAAO,CAACC,GAAR,CAAYL,QAAZ;;AACA,YAAIA,QAAQ,CAACM,EAAb,EAAiB;AACb,cAAIhB,QAAQ,GAAG,MAAMU,QAAQ,CAACO,IAAT,EAArB;AACA,eAAKR,QAAL,CAAc;AAAET,YAAAA,QAAQ,EAAEA,QAAZ;AAAsBE,YAAAA,SAAS,EAAE,KAAjC;AAAwCE,YAAAA,OAAO,EAAE;AAAjD,WAAd;AACH,SAHD,MAGO;AACHU,UAAAA,OAAO,CAACC,GAAR,CAAY,OAAZ;AACA,eAAKN,QAAL,CAAc;AAAEP,YAAAA,SAAS,EAAE,KAAb;AAAoBE,YAAAA,OAAO,EAAE;AAA7B,WAAd;AACH;AACJ,OAdD,CAcE,OAAOc,KAAP,EAAc;AACZJ,QAAAA,OAAO,CAACC,GAAR,CAAYG,KAAZ;AACA,aAAKT,QAAL,CAAc;AAAEP,UAAAA,SAAS,EAAE,KAAb;AAAoBE,UAAAA,OAAO,EAAE;AAA7B,SAAd;AACH;AACJ;AACJ,GAxBD;;AA2BI,sBACI;AAAA,eACK,KAAKe,KAAL,CAAWjB,SAAX,iBAAwB,QAAC,OAAD;AAAA;AAAA;AAAA;AAAA,YAD7B,EAEK,KAAKiB,KAAL,CAAWf,OAAX,iBAAsB,QAAC,KAAD;AAAA;AAAA;AAAA;AAAA,YAF3B,eAGI,QAAC,UAAD;AAAY,MAAA,IAAI,EAAE,KAAKI,KAAL,CAAWT;AAA7B;AAAA;AAAA;AAAA;AAAA,YAHJ,eAII,QAAC,WAAD;AAAa,MAAA,cAAc,EAAE,KAAKoB,KAAL,CAAWnB;AAAxC;AAAA;AAAA;AAAA;AAAA,YAJJ;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AAQH,CA1CL;;GAAMF,W;;KAAAA,W;AA4CN,eAAeA,WAAf","sourcesContent":["import { useState, useEffect } from 'react'\r\nimport CommentList from './CommentList'\r\nimport AddComment from './AddComment'\r\nimport Loading from './Loading'\r\nimport Error from './Error'\r\n\r\nconst CommentArea = ({asin})=> {\r\n\r\n    const [comments, setComments] = useState([])\r\n    const [isLoading, setIsLoading] = useState(false)\r\n    const [isError, setIsError] = useState(false)\r\n\r\n\r\n    componentDidUpdate = async (prevProps) => {\r\n        if (prevProps.asin !== this.props.asin) {\r\n            this.setState({\r\n                isLoading: true\r\n            })\r\n            try {\r\n                let response = await fetch('https://striveschool-api.herokuapp.com/api/comments/' + this.props.asin, {\r\n                    headers: {\r\n                        Authorization: 'Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJfaWQiOiI2MTFkMGNkODJkNTI2MjAwMTViNmRkMTEiLCJpYXQiOjE2MzA0MTY2NTIsImV4cCI6MTYzMTYyNjI1Mn0.fisEkgJq6UEakcqWnRJsQMKZz7LaVF2pOlfCz9VAA5M'\r\n                    }\r\n                })\r\n                console.log(response)\r\n                if (response.ok) {\r\n                    let comments = await response.json()\r\n                    this.setState({ comments: comments, isLoading: false, isError: false })\r\n                } else {\r\n                    console.log('error')\r\n                    this.setState({ isLoading: false, isError: true })\r\n                }\r\n            } catch (error) {\r\n                console.log(error)\r\n                this.setState({ isLoading: false, isError: true })\r\n            }\r\n        }\r\n    }\r\n\r\n    \r\n        return (\r\n            <div>\r\n                {this.state.isLoading && <Loading />}\r\n                {this.state.isError && <Error />}\r\n                <AddComment asin={this.props.asin} />\r\n                <CommentList commentsToShow={this.state.comments} />\r\n            </div>\r\n        )\r\n    }\r\n\r\nexport default CommentArea"]},"metadata":{},"sourceType":"module"}