{"ast":null,"code":"var _jsxFileName = \"/Users/colemanrose/m4-d6-hw/src/components/AddComment.jsx\";\nimport { Component } from \"react\";\nimport { Button, Form } from 'react-bootstrap';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass AddComment extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      comment: {\n        comment: '',\n        rate: 1,\n        elementId: null\n      }\n    };\n\n    this.sendComment = async e => {\n      e.preventDefault();\n\n      try {\n        let response = await fetch('https://striveschool-api.herokuapp.com/api/comments', {\n          method: 'POST',\n          body: JSON.stringify(this.state.comment),\n          headers: {\n            'Content-type': 'application/json',\n            Authorization: 'Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJfaWQiOiI2MGI3OWY5NTgxNmI1YjAwMTU5NDA3NDAiLCJpYXQiOjE2MjI2NDY2NzcsImV4cCI6MTYyMzg1NjI3N30.y-rBwB5WAQOWBvWrLlAgTQUrbGulxd2M6cWH3VLyGLw'\n          }\n        });\n\n        if (response.ok) {\n          // the comment has been sent succesfully!!\n          alert('Comment was sent!');\n        } else {\n          console.log('error');\n          alert('something went wrong');\n        }\n      } catch (error) {\n        console.log('error');\n      }\n    };\n  }\n\n  componentDidUpdate(prevProps) {\n    if (prevProps.asin !== this.props.asin) {\n      this.setState({\n        comment: { ...this.state.comment,\n          elementId: this.props.asin\n        }\n      });\n    }\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(Form, {\n        onSubmit: this.sendComment,\n        children: [/*#__PURE__*/_jsxDEV(Form.Group, {\n          children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n            children: \"Comment text\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 53,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n            type: \"text\",\n            placeholder: \"Add comment here\",\n            value: this.state.comment.comment,\n            onChange: e => this.setState({\n              comment: { ...this.state.comment,\n                comment: e.target.value\n              }\n            })\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 54,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 52,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n          children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n            children: \"Rating\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 67,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n            as: \"select\",\n            value: this.state.comment.rate,\n            onChange: e => this.setState({\n              comment: { ...this.state.comment,\n                rate: e.target.value\n              }\n            }),\n            children: [/*#__PURE__*/_jsxDEV(\"option\", {\n              children: \"1\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 75,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n              children: \"2\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 76,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n              children: \"3\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 77,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n              children: \"4\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 78,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n              children: \"5\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 79,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 68,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 66,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          variant: \"primary\",\n          type: \"submit\",\n          children: \"Submit\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 82,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 13\n    }, this);\n  }\n\n}\n\nexport default AddComment;","map":{"version":3,"sources":["/Users/colemanrose/m4-d6-hw/src/components/AddComment.jsx"],"names":["Component","Button","Form","AddComment","state","comment","rate","elementId","sendComment","e","preventDefault","response","fetch","method","body","JSON","stringify","headers","Authorization","ok","alert","console","log","error","componentDidUpdate","prevProps","asin","props","setState","render","target","value"],"mappings":"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","sourcesContent":["import { Component } from \"react\";\r\nimport { Button, Form } from 'react-bootstrap'\r\n\r\nclass AddComment extends Component {\r\n\r\n    state = {\r\n        comment: {\r\n            comment: '',\r\n            rate: 1,\r\n            elementId: null\r\n        }\r\n    }\r\n\r\n    componentDidUpdate(prevProps) {\r\n        if (prevProps.asin !== this.props.asin) {\r\n            this.setState({\r\n                comment: {\r\n                    ...this.state.comment,\r\n                    elementId: this.props.asin\r\n                }\r\n            })\r\n        }\r\n    }\r\n\r\n    sendComment = async (e) => {\r\n        e.preventDefault()\r\n        try {\r\n            let response = await fetch('https://striveschool-api.herokuapp.com/api/comments', {\r\n                method: 'POST',\r\n                body: JSON.stringify(this.state.comment),\r\n                headers: {\r\n                    'Content-type': 'application/json',\r\n                    Authorization: 'Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJfaWQiOiI2MGI3OWY5NTgxNmI1YjAwMTU5NDA3NDAiLCJpYXQiOjE2MjI2NDY2NzcsImV4cCI6MTYyMzg1NjI3N30.y-rBwB5WAQOWBvWrLlAgTQUrbGulxd2M6cWH3VLyGLw'\r\n                }\r\n            })\r\n            if (response.ok) {\r\n                // the comment has been sent succesfully!!\r\n                alert('Comment was sent!')\r\n            } else {\r\n                console.log('error')\r\n                alert('something went wrong')\r\n            }\r\n        } catch (error) {\r\n            console.log('error')\r\n        }\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n                <Form onSubmit={this.sendComment}>\r\n                    <Form.Group>\r\n                        <Form.Label>Comment text</Form.Label>\r\n                        <Form.Control\r\n                            type=\"text\"\r\n                            placeholder=\"Add comment here\"\r\n                            value={this.state.comment.comment}\r\n                            onChange={e => this.setState({\r\n                                comment: {\r\n                                    ...this.state.comment,\r\n                                    comment: e.target.value\r\n                                }\r\n                            })}\r\n                        />\r\n                    </Form.Group>\r\n                    <Form.Group>\r\n                        <Form.Label>Rating</Form.Label>\r\n                        <Form.Control as=\"select\" value={this.state.comment.rate}\r\n                            onChange={e => this.setState({\r\n                                comment: {\r\n                                    ...this.state.comment,\r\n                                    rate: e.target.value\r\n                                }\r\n                            })}>\r\n                            <option>1</option>\r\n                            <option>2</option>\r\n                            <option>3</option>\r\n                            <option>4</option>\r\n                            <option>5</option>\r\n                        </Form.Control>\r\n                    </Form.Group>\r\n                    <Button variant=\"primary\" type=\"submit\">\r\n                        Submit\r\n                    </Button>\r\n                </Form>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default AddComment"]},"metadata":{},"sourceType":"module"}